Grafo
BFS è un metodo che lavorando sulla matrice di adiacenza va a scorrere tutto il grafo prendendo i singoli nodi e andando ad aggiornare per ciascuno di essi i relativi vettori {parent, color, distanza}
La BFS viene richiamata all'interno del printShortestPath che a sua volta si ricollega al metodo shortestPath e inoltre viene utilizzata anche nel metodo "raggiungibili".
A livello insiemistico possiamo immaginarlo nel seguento modo:
(printShortestPath(shortestPath(bfs)))
PrintShortestPath manda a video il cammino più corto con i relativi indici e nodi.
ShortestPath manda a video soltanto l'intero distanza più breve.

DFS è un metodo che lavora anche esso sulla matrice di adiacenza e consinste nell'andare a visitare tutto il grafo colorando i singoli nodi e attraverso quest'ultimi è in grado di riconoscere i vari tipi di arco {arco dell'albero, arco in avanti o arco di attraversamento, arco all'indietro(qualora siano presenti cicli)}.
#Importante nel public: il metodo DFS() consiste nel contare e restituire il numero di cicli.

Topological_Sort
http://techieme.in/topological-ordering-for-graphs/
La visita inizia scegliendo uno dei nodi non aventi archi in ingresso;
Si stampa a video il nodo, si elimina e si procede eliminando i suoi archi uscenti e così iterativamente;
Ovvero "casualmente" si sceglie uno tra i nodi non aventi archi entranti e si procede stampando a video il nodo, eliminandolo e aliminando i suoi archi in uscita.

Metodo adjSet è un metodo che stampa i relativi collegamenti "archi" della chiave passatagli e viene richiamato dal relitivo metodo di stampa.
Esempio: (indice, nodo) --> {collegamenti}
	 (0, 1) --> {2,3,4}

Metodo raggiungibili[only public] Stampa a video ,richiamando il metodo bfs e passandogli l'indice interessato (ovvero l'indice sorgente), tutti i nodi raggiungibili. 


